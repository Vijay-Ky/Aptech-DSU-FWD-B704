REACT
--------------
1. setup
2. Basics
3. React hooks
4. Context API
5. React Router
6. Project

React is a javascript library for building user interfaces

----------
1. React developed by facebook 2011
2. Competetors Angular, Vue, Svelte
3. Components = User Interfaces 
   - React is all about components, components nothing but independent chunks of user interfaces.
   components can be small as one html element.
   - Benifits of the component is we can build independent, isolated, reuseable user interfaces.
   - we can have any number of components but at least one component we will be having.
     called root component.
   - combining all the small pieces of components we can build a large application.
   - changing the logic or layout in one component will not break other.
   - once the component is built we can use it throught our application.
   - but component code still stored in one place, if we want to make some change we dont have
     to bother simply we can locate the component and apply the changes, then all the instaces 
     will be automatically updated.
4. Root component, Component Tree
5. Independence
6. Reusability
7. Speed
   - behind the scenes react is using virtual dom, the only component needs to be updated is affected.
     its done without rerendering the whole application. in turn which increases the speed of the 
     final product. as well as user experience.
8. React app run in the browser they dont run in the server.we dont have to wait for the 
   server response to get a new page or render something new.
9. we can split any webpage into components
10. we can think of components as customized html elements.

Requirements
----------------
1. HTML
2. CSS
3. Javascript(ES6)


Developement Environment
--------------------------
1. Node - https://nodejs.org/en/download/
2. node --version, minimum 5.2.0 (npx)
3. browser =  chrome
4. TextEditor = visual studio code
5. React Developer Tools for chrome

----------------------
- to see react based website just press cntr + shift + i and look for the profiler and components
- if the website using react react developer tools extension will be visible.

----------------
install important extensions for VS code
-----------------

Working with terminal
---------------------
PWD - Full Pathname to current working directory
ls - List of Directories
MKDIR - create a directory/folder
cd - change directory
cd .. - navigate to parent/ one level up
clear - clear the console
Arrow up/down - previous commands


NPM(Node Package Manager)
-------------
npm init = creates package.json(manifest) file.list dependencies
npm install <package-name> --save = install package locally(default) and add to package.json
npm install <package-name> -g = install package globally(access anywhere) sudo
npm install <package-name> --save-dev = use it only in development.

-------------
- create testing folder and trigger npm init name it app and everything default then press ok

- to open integrated terminal in vs code press cntr + `
- randomly installing dependency 
  npm install bootstrap --save

  node_modules will be created and it indicates list of dependencies.



setting up react app
 --------------------------------------
1. easiest way is Create React App
2. usage of Babel turning ES6 code to ES5
3. webpack - works as a module bundler

in order to bootstrap a fresh react app
go to one new folder
trigger - npx create-react-app tutorial

after trigger npm start
 
automatically http://localhost:3000 react app will be running
-------------------------
if you get stuck in the running app try this
Run npm install to update packages

then run npm audit fix to fix vulnerabilities

Finally close all browser tab to free up RAM. I have seen node processes take a significant amount of memory.

npm run build

Run npm start and the development server spins up within a minute or two.

--------------------------

using code pen for first quick example

- go to codepen.io then click on start coding to create a pen


- write the code and select settings in js section and select react and choose the preprocessor
 as babel.
 add external packages
 1. https://cdnjs.cloudflare.com/ajax/libs/react/17.0.2/umd/react.production.min.js
 2. https://cdnjs.cloudflare.com/ajax/libs/react-dom/17.0.2/umd/react-dom.production.min.js
 Babel is a JavaScript compiler
 Babel is a toolchain that is mainly used to convert ECMAScript 2015+ 
 code into a backwards compatible version of JavaScript in current and 
 older browsers or environments.
 ---------
write our first react componet
a react component is just a function



if some dependency is missing or accidentaly deleted just run - npm install


delete all the unnecessary files in the src folder except index.js file 



----------------------------------------------------------------
difference between sinlge page application and multi page application
------------
SPA                                                           
--
- only one html page, content is (re)rendered on client
- typically only one ReactDOM.render() call




MPA
--
- multiple html pages, content is rendered on server
- one ReactDOM.render() call per "widget"


